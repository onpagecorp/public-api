openapi: 3.0.0
paths:
  /administrators:
    get:
      operationId: AdministratorsController_getContactsV1
      parameters:
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: nextPageToken
          required: false
          in: query
          schema:
            default: null
            type: string
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            example: 50
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorsDto"
      security: &a1
        - bearer: []
      summary: Get list of administrators
      tags: &a2
        - Administrators
    post:
      operationId: AdministratorsController_createAdministratorV1
      parameters: []
      requestBody:
        required: true
        description: New administrator DTO
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdministratorCreateDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorDto"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorDto"
        "400":
          description: Bad request
          content:
            application/json:
              example: email must be an email
        "406":
          description: Administrator could not be created.
          content:
            application/json:
              example: Administrator with email a@b.c already exist.
      security: *a1
      summary: Create new administrator
      tags: *a2
  /administrators/{id}:
    get:
      operationId: AdministratorsController_getContactV1
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorDto"
        "404":
          description: Administrator requested not found
      security: *a1
      summary: Get administrator by ID
      tags: *a2
    delete:
      operationId: AdministratorsController_deleteAdministratorV1
      parameters:
        - name: id
          required: true
          in: path
          description: Administrator ID
          schema:
            type: number
      responses:
        "204":
          description: Administrator deleted successfully.
        "404":
          description: Administrator requested not found.
        "406":
          description: Administrator could not be deleted.
        "500":
          description: Administrator could not be deleted.
      security: *a1
      summary: Delete a administrator
      tags: *a2
    put:
      operationId: AdministratorsController_updateAdministratorV1
      parameters:
        - name: id
          required: true
          in: path
          description: Administrator ID
          schema:
            type: number
      requestBody:
        required: true
        description: Administrator DTO
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdministratorUpdateDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorDto"
        "400":
          description: Bad request
          content:
            application/json:
              example: email must be an email
        "406":
          description: Administrator could not be update.
      security: *a1
      summary: Update an administrator
      tags: *a2
  /attachments:
    post:
      operationId: AttachmentsController_createAttachmentV1
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAttachmentDto"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAttachmentDto"
      security: &a3
        - bearer: []
      summary: Upload new attachment
      tags: &a4
        - Attachments
  /attachments/{id}:
    get:
      operationId: AttachmentsController_getAttachmentV1
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachmentDto"
        "404":
          description: Attachment not found
      security: *a3
      summary: Get an attachment
      tags: *a4
  /contacts:
    get:
      operationId: ContactsController_getContactsV1
      parameters:
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: nextPageToken
          required: false
          in: query
          schema:
            default: null
            type: string
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            example: 50
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactsDto"
      security: &a5
        - bearer: []
      summary: Get list of contacts
      tags: &a6
        - Contacts
    post:
      operationId: ContactsController_createContactV1
      parameters: []
      requestBody:
        required: true
        description: Contact data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactCreateDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactCreateResponseDto"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactCreateResponseDto"
        "409":
          description: Contact already exists
        "500":
          description: Internal server error
      security: *a5
      summary: Create new contact
      tags: *a6
  /contacts/{id}:
    get:
      operationId: ContactsController_getContactV1
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactDto"
      security: *a5
      summary: Get contact by ID
      tags: *a6
    put:
      operationId: ContactsController_updateContactV1
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      security: *a5
      summary: Update a contact
      tags: *a6
    delete:
      operationId: ContactsController_deleteContactV1
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      security: *a5
      summary: Delete a contact
      tags: *a6
  /contacts-groups:
    get:
      operationId: ContactsGroupsControllerV1_getContactGroups
      parameters:
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: nextPageToken
          required: false
          in: query
          schema:
            default: null
            type: string
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            example: 50
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGroupsDto"
      security: &a7
        - bearer: []
      summary: Get list of contact's groups
      tags: &a8
        - Contacts
    post:
      operationId: ContactsGroupsControllerV1_getContactGroupV1
      parameters: []
      requestBody:
        required: true
        description: Contact Group DTO
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactGroupCreateDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGroupDto"
      security: *a7
      summary: Create contact group
      tags: *a8
  /contacts-groups/{id}:
    get:
      operationId: ContactsGroupsControllerV1_getContactGroupByIdV1
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGroupDto"
        "404":
          description: Group requested not found
      security: *a7
      summary: Get contact groups
      tags: *a8
    put:
      operationId: ContactsGroupsControllerV1_updateAdministratorGroupV1
      parameters:
        - name: id
          required: true
          in: path
          description: Contact group ID
          schema:
            type: number
      requestBody:
        required: true
        description: Contact group DTO.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactGroupUpdateDto"
      responses:
        "200":
          description: Contact group updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGroupDto"
        "406":
          description: Contact group could not be update.
      security: *a7
      summary: Update an contact group
      tags: *a8
    patch:
      operationId: ContactsGroupsControllerV1_patchContactGroupV1
      parameters:
        - name: id
          required: true
          in: path
          description: Contact group ID
          schema:
            type: number
      requestBody:
        required: true
        description: Patch operations.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PatchOperationDto"
      responses:
        "200":
          description: Contact group updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGroupDto"
        "406":
          description: Contact group could not be update.
      security: *a7
      summary: Patch an contact group
      tags: *a8
  /pages:
    get:
      operationId: PagesControllerV1_getPagesV1
      parameters:
        - name: offset
          required: false
          in: query
          schema:
            default: 0
            example: 0
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            example: 50
            type: number
        - name: search
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagesListDto"
      security: &a9
        - bearer: []
      summary: Get list of pages
      tags: &a10
        - Pages
    post:
      operationId: PagesControllerV1_sendPagesV1
      parameters: []
      requestBody:
        required: true
        description: send Page DTO
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageSendDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageDto"
      security: *a9
      summary: Send page
      tags: *a10
  /pages/{id}:
    get:
      operationId: PagesControllerV1_getPageByIdV1
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactDto"
      security: *a9
      summary: Get Page by ID
      tags: *a10
  /settings:
    get:
      operationId: SettingsController_getSettingsV1
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsDto"
      summary: Get enterprise settings
      tags: &a11
        - Settings
    patch:
      operationId: SettingsController_patchSettingsV1
      parameters: []
      requestBody:
        required: true
        description: Settings partial data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SettingsUpdateDto"
      responses:
        "204":
          description: Settings patched successfully
        "403":
          description: Forbidden
      summary: Patch settings
      tags: *a11
  /templates:
    get:
      operationId: TemplatesController_getContactsV1
      parameters:
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: nextPageToken
          required: false
          in: query
          schema:
            default: null
            type: string
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            example: 50
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplatesDto"
      security: &a12
        - bearer: []
      summary: Get list of templates
      tags: &a13
        - Templates
    post:
      operationId: TemplatesController_createTemplateV1
      parameters: []
      requestBody:
        required: true
        description: New Template DTO
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateCreateDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDto"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDto"
      security: *a12
      summary: Create new template
      tags: *a13
  /templates/{id}:
    get:
      operationId: TemplatesController_getTemplateV1
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDto"
      security: *a12
      summary: Get template by ID
      tags: *a13
    patch:
      operationId: TemplatesController_updateTemplateV1
      parameters:
        - name: id
          required: true
          in: path
          description: Template ID
          schema:
            type: number
      requestBody:
        required: true
        description: Template partial data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateUpdateDto"
      responses:
        "200":
          description: Template updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDto"
      security: *a12
      summary: Update a template
      tags: *a13
    delete:
      operationId: TemplatesController_deleteTemplateV1
      parameters:
        - name: id
          required: true
          in: path
          description: Template ID
          schema:
            type: number
      responses:
        "204":
          description: Template deleted successfully
        "404":
          description: Template requested not found
      security: *a12
      summary: Delete a template
      tags: *a13
  /contacts-status:
    get:
      operationId: ContactsStatusController_getContactsStatusV1
      parameters:
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: filter
          required: false
          in: query
          schema:
            enum:
              - logged-in
              - logged-out
              - pager-off
            type: string
        - name: offset
          required: false
          in: query
          schema:
            default: 0
            example: 0
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            example: 50
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactsStatusDto"
      security:
        - bearer: []
      summary: Get list of contacts by status
      tags:
        - Contacts
  /administrators-groups:
    get:
      operationId: AdministratorGroupsController_getContactsV1
      parameters:
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: nextPageToken
          required: false
          in: query
          schema:
            default: null
            type: string
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            example: 50
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorGroupsDto"
      security: &a14
        - bearer: []
      summary: Get list of administrator's groups
      tags: &a15
        - Administrators
    post:
      operationId: AdministratorGroupsController_createAdministratorV1
      parameters: []
      requestBody:
        required: true
        description: New administratorGroup DTO
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdministratorGroupCreateDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorGroupDto"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorGroupDto"
      security: *a14
      summary: Create new administratorGroup
      tags: *a15
  /administrators-groups/{id}:
    get:
      operationId: AdministratorGroupsController_getAdministratorGroupV1
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorGroupDto"
        "404":
          description: Group requested not found
      security: *a14
      summary: Get administrator group by ID
      tags: *a15
    delete:
      operationId: AdministratorGroupsController_deleteAdministratorV1
      parameters:
        - name: id
          required: true
          in: path
          description: Administrators group ID
          schema:
            type: number
      responses:
        "204":
          description: Administrators group deleted successfully.
        "404":
          description: Administrators group requested not found.
        "406":
          description: Administrators group could not be deleted.
        "500":
          description: Administrators group could not be deleted.
      security: *a14
      summary: Delete a administrators group
      tags: *a15
    put:
      operationId: AdministratorGroupsController_updateAdministratorGroupV1
      parameters:
        - name: id
          required: true
          in: path
          description: Administrator group ID
          schema:
            type: number
      requestBody:
        required: true
        description: Administrator group DTO.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdministratorGroupUpdateDto"
      responses:
        "200":
          description: Administrator group updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorGroupDto"
        "406":
          description: Administrator group could not be update.
      security: *a14
      summary: Update an administrator group
      tags: *a15
    patch:
      operationId: AdministratorGroupsController_patchAdministratorGroupV1
      parameters:
        - name: id
          required: true
          in: path
          description: Administrator group ID
          schema:
            type: number
      requestBody:
        required: true
        description: Patch operations.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PatchOperationDto"
      responses:
        "200":
          description: Administrator group updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministratorGroupDto"
        "406":
          description: Administrator group could not be update.
      security: *a14
      summary: Patch an administrator group
      tags: *a15
info:
  title: OnPage API
  description: >-
    OpenAPI definition for managing dispatching, pages, contacts,
    administrators, templates, settings, and webhooks.


    [📥 Download Swagger YAML](./swagger.yaml)
  version: "1.0"
  contact: {}
tags:
  - name: API
    description: ""
servers:
  - url: http://127.0.0.1:3003
    description: Development Server
  - url: https://public-api.onsetmobile.com
    description: Sandbox Server
  - url: https://public-api.onpage.com
    description: Production Server
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    AdministratorPermissions:
      type: object
      properties:
        createEscalation:
          type: boolean
          description: Can create escalation group
          default: false
        groupCreate:
          type: boolean
          description: Can create group
          default: false
        contactDelete:
          type: boolean
          description: Can delete contact
          default: false
        contactEdit:
          type: boolean
          description: Can edit contact
          default: false
        contactAdd:
          type: boolean
          description: Can create contact
          default: false
        contactToGroup:
          type: boolean
          description: Can add contact a group
          default: false
        removeContactFromGroup:
          type: boolean
          description: an remove from a group
          default: false
        deleteGroup:
          type: boolean
          description: Can delete group
          default: false
        editGroup:
          type: boolean
          description: Can edit group
          default: false
        editEscalationGroup:
          type: boolean
          description: Can edit escalation group
          default: false
        viewSchedule:
          type: boolean
          description: Can view scheduler
          default: false
        editSchedule:
          type: boolean
          description: Can edit scheduler
          default: false
        viewReports:
          type: boolean
          description: Can login to reports
          default: false
    AdministratorDto:
      type: object
      properties:
        id:
          type: number
          description: Administrator ID
        firstName:
          type: string
          description: Administrator first name
        lastName:
          type: string
          description: Administrator last name
        email:
          type: string
          description: Administrator email address
        phoneNumber:
          type: string
          description: Administrator phone number
        groups:
          description: Groups the administrator is member of
          type: array
          items:
            type: number
        superAdmin:
          type: boolean
          description: Super admin flag
          default: false
        permissions:
          description: Administrator permissions
          allOf:
            - $ref: "#/components/schemas/AdministratorPermissions"
      required:
        - id
        - firstName
        - lastName
        - email
        - phoneNumber
        - permissions
    Metadata:
      type: object
      properties:
        nextPageToken:
          type: string
      required:
        - nextPageToken
    AdministratorsDto:
      type: object
      properties:
        administrators:
          description: Array of administrators
          type: array
          items:
            $ref: "#/components/schemas/AdministratorDto"
        metadata:
          description: Response metadata
          allOf:
            - $ref: "#/components/schemas/Metadata"
      required:
        - administrators
        - metadata
    AdministratorCreateDto:
      type: object
      properties:
        password:
          type: string
          description: Administrator password
        firstName:
          type: string
          description: Administrator first name
        lastName:
          type: string
          description: Administrator last name
        email:
          type: string
          description: Administrator email address
        phoneNumber:
          type: string
          description: Administrator phone number
        groups:
          description: Groups the administrator is member of
          type: array
          items:
            type: number
        superAdmin:
          type: boolean
          description: Super admin flag
          default: false
        permissions:
          description: Administrator permissions
          allOf:
            - $ref: "#/components/schemas/AdministratorPermissions"
      required:
        - password
        - firstName
        - lastName
        - email
        - phoneNumber
        - permissions
    AdministratorUpdateDto:
      type: object
      properties:
        password:
          type: string
          description: Administrator password
        firstName:
          type: string
          description: Administrator first name
        lastName:
          type: string
          description: Administrator last name
        phoneNumber:
          type: string
          description: Administrator phone number
        groups:
          description: Groups the administrator is member of
          type: array
          items:
            type: number
        superAdmin:
          type: boolean
          description: Super admin flag
          default: false
        permissions:
          description: Administrator permissions
          allOf:
            - $ref: "#/components/schemas/AdministratorPermissions"
    CreateAttachmentDto:
      type: object
      properties:
        id:
          type: string
          description: Attachment ID
      required:
        - id
    AttachmentDto:
      type: object
      properties:
        id:
          type: string
          description: Attachment ID
        name:
          type: string
          description: Attachment file name
        size:
          type: number
          description: Attachment size in bytes
        data:
          type: string
          description: Attachment buffer
      required:
        - id
        - name
        - size
        - data
    ContactDto:
      type: object
      properties:
        id:
          type: number
          description: Account ID
        opid:
          type: string
          description: OnPage ID
        firstName:
          type: string
          description: Account first name
        lastName:
          type: string
          description: Account last name
        email:
          type: string
          description: Account email address
        phoneNumber:
          type: string
          description: Account phone number
        status:
          type: string
          description: Account OPID status
        groups:
          description: Groups the account is member of
          type: array
          items:
            type: string
      required:
        - id
        - opid
        - firstName
        - lastName
        - email
        - phoneNumber
        - status
    ContactsDto:
      type: object
      properties:
        contacts:
          description: Array of contacts
          type: array
          items:
            $ref: "#/components/schemas/ContactDto"
        metadata:
          description: Response metadata
          allOf:
            - $ref: "#/components/schemas/Metadata"
      required:
        - contacts
        - metadata
    ContactCreateDto:
      type: object
      properties:
        opid:
          type: string
          description: OnPage ID
        firstName:
          type: string
          description: Contact first name
        lastName:
          type: string
          description: Contact last name
        email:
          type: string
          description: Contact email address
        password:
          type: string
          description: Contact password
        phoneNumber:
          type: string
          description: Contact phone number
      required:
        - opid
        - firstName
        - lastName
        - email
        - password
        - phoneNumber
    IdResponseDto:
      type: object
      properties:
        id:
          type: number
          description: ID
      required:
        - id
    ContactCreateResponseDto:
      type: object
      properties:
        contact:
          description: Contact
          allOf:
            - $ref: "#/components/schemas/IdResponseDto"
      required:
        - contact
    ContactGroupMemberDto:
      type: object
      properties:
        contactId:
          type: number
          description: Contact ID
        order:
          type: number
          description: Escalation order
          nullable: true
      required:
        - contactId
    ESCALATION_INTERVAL_DTO:
      type: string
      enum:
        - NONE
        - 1 minute
        - 2 minutes
        - 3 minutes
        - 5 minutes
        - 10 minutes
        - 15 minutes
        - 20 minutes
        - 25 minutes
        - 30 minutes
        - 35 minutes
        - 40 minutes
        - 45 minutes
        - 50 minutes
        - 55 minutes
        - 1 hour
    ESCALATION_FACTOR:
      type: string
      enum:
        - NONE
        - DELIVERED
        - READ
        - REPLIED
    GroupFailOverDto:
      type: object
      properties:
        includeOriginalMessage:
          type: boolean
          description: Fail over includes origin al message
        emails:
          description: Fail over to emails list
          type: array
          items:
            type: string
        contacts:
          description: Fail over to contacts list
          type: array
          items:
            type: number
        groups:
          description: Fail over to contacts' groups list
          type: array
          items:
            type: number
      required:
        - includeOriginalMessage
        - emails
    ContactGroupDto:
      type: object
      properties:
        id:
          type: number
          description: Group ID
        opid:
          type: string
          description: OnPage ID (OPID)
        name:
          type: string
          description: Group name
        description:
          type: string
          description: Group description
        contacts:
          description: Contacts of the group
          type: array
          items:
            $ref: "#/components/schemas/ContactGroupMemberDto"
        escalation:
          type: boolean
          description: Escalation flag
        escalationInterval:
          description: Escalation interval
          allOf:
            - $ref: "#/components/schemas/ESCALATION_INTERVAL_DTO"
        escalationFactor:
          description: Escalation factor
          allOf:
            - $ref: "#/components/schemas/ESCALATION_FACTOR"
        failOver:
          description: Fail over parameters
          allOf:
            - $ref: "#/components/schemas/GroupFailOverDto"
      required:
        - id
        - opid
        - name
        - contacts
        - escalation
    ContactGroupsDto:
      type: object
      properties:
        contacts:
          description: Array of groups
          type: array
          items:
            $ref: "#/components/schemas/ContactGroupDto"
        metadata:
          description: Response metadata
          allOf:
            - $ref: "#/components/schemas/Metadata"
      required:
        - contacts
        - metadata
    ContactGroupCreateDto:
      type: object
      properties:
        opid:
          type: string
          description: OnPage ID (OPID)
        name:
          type: string
          description: Group name
        description:
          type: string
          description: Group description
        contacts:
          description: Contacts of the group
          type: array
          items:
            $ref: "#/components/schemas/ContactGroupMemberDto"
        escalation:
          type: boolean
          description: Escalation flag
        escalationInterval:
          description: Escalation interval
          allOf:
            - $ref: "#/components/schemas/ESCALATION_INTERVAL_DTO"
        escalationFactor:
          description: Escalation factor
          allOf:
            - $ref: "#/components/schemas/ESCALATION_FACTOR"
        failOver:
          description: Fail over parameters
          allOf:
            - $ref: "#/components/schemas/GroupFailOverDto"
      required:
        - opid
        - name
        - contacts
        - escalation
    ContactGroupUpdateDto:
      type: object
      properties:
        opid:
          type: string
          description: OnPage ID (OPID)
        name:
          type: string
          description: Group name
        description:
          type: string
          description: Group description
        contacts:
          description: Contacts of the group
          type: array
          items:
            $ref: "#/components/schemas/ContactGroupMemberDto"
        escalation:
          type: boolean
          description: Escalation flag
        escalationInterval:
          description: Escalation interval
          allOf:
            - $ref: "#/components/schemas/ESCALATION_INTERVAL_DTO"
        escalationFactor:
          description: Escalation factor
          allOf:
            - $ref: "#/components/schemas/ESCALATION_FACTOR"
        failOver:
          description: Fail over parameters
          allOf:
            - $ref: "#/components/schemas/GroupFailOverDto"
      required:
        - opid
        - name
        - contacts
        - escalation
    PatchOperationDto:
      type: object
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON Pointer that indicates the location to perform the operation
        value:
          type: object
          description: The value to be used for the operation (if applicable)
        from:
          type: string
          description: The source location for move or copy operations (if applicable)
      required:
        - op
        - path
    PageFromDto:
      type: object
      properties:
        type:
          type: string
          description: Type
          enum:
            - EMAIL
            - DISPATCHER
            - ONPAGE
            - WEB
            - ACCOUNT
            - API
            - PHONE
            - WCTP
            - SNPP
        caption:
          type: string
          description: Caption
        value:
          type: object
          description: Value
      required:
        - type
        - caption
        - value
    PagePriority:
      type: string
      enum:
        - HIGH
        - LOW
    RecipientDto:
      type: object
      properties:
        type:
          type: string
          description: Type
          enum:
            - dispatcher
            - email
            - opid
            - system
        caption:
          type: string
          description: Caption
        value:
          type: string
          description: Type
      required:
        - type
        - caption
        - value
    PageDto:
      type: object
      properties:
        id:
          type: number
          description: Page ID
        chatId:
          type: number
          description: Chat ID
        from:
          description: Sender
          allOf:
            - $ref: "#/components/schemas/PageFromDto"
        subject:
          type: string
          description: Subject
        body:
          type: string
          description: Body
        priority:
          description: Priority
          default: HIGH
          allOf:
            - $ref: "#/components/schemas/PagePriority"
        recipients:
          description: Recipients
          type: array
          items:
            $ref: "#/components/schemas/RecipientDto"
        created:
          type: string
          description: Created at
        replies:
          description: Possible replies
          type: array
          items:
            type: string
        attachments:
          description: Attachments
          type: array
          items:
            type: string
        callbackUri:
          type: string
          description: Callback URI
      required:
        - id
        - chatId
        - from
        - subject
        - priority
        - recipients
        - created
    PagesListDto:
      type: object
      properties:
        pages:
          description: Array of pages
          type: array
          items:
            $ref: "#/components/schemas/PageDto"
        metadata:
          description: Response metadata
          allOf:
            - $ref: "#/components/schemas/Metadata"
      required:
        - pages
        - metadata
    PageSendDto:
      type: object
      properties:
        chatId:
          type: number
          description: Chat ID
        subject:
          type: string
          description: Subject
        body:
          type: string
          description: Body
        priority:
          description: Priority
          default: HIGH
          allOf:
            - $ref: "#/components/schemas/PagePriority"
        recipients:
          description: Recipients' OPIDs
          type: array
          items:
            type: string
        replies:
          description: Possible replies
          type: array
          items:
            type: string
        attachments:
          description: Attachments ID's list
          type: array
          items:
            type: string
        callbackUri:
          type: string
          description: Callback URI
      required:
        - chatId
        - subject
        - priority
        - recipients
    SettingsDto:
      type: object
      properties:
        onCallReminders:
          type: boolean
          description: On-call reminders
        twoFactorAuthentication:
          type: boolean
          description: F2A authentication
        dispatcherSessionTimeout:
          type: boolean
          description: Dispatcher console time out in minutes
      required:
        - onCallReminders
        - twoFactorAuthentication
        - dispatcherSessionTimeout
    SettingsUpdateDto:
      type: object
      properties:
        onCallReminders:
          type: boolean
          description: On-call reminders
        twoFactorAuthentication:
          type: boolean
          description: F2A authentication
        dispatcherSessionTimeout:
          type: boolean
          description: Dispatcher console time out in minutes
    TemplateDto:
      type: object
      properties:
        id:
          type: number
          description: Template ID
        name:
          type: string
          description: Template name
        subject:
          type: string
          description: Template subject
        body:
          type: string
          description: Template body
        predefinedReplies:
          description: Predefined replies
          type: array
          items:
            type: string
        syncToDevice:
          type: boolean
          description: Sync to device flag
          default: false
      required:
        - id
        - name
        - subject
    TemplatesDto:
      type: object
      properties:
        templates:
          description: List of templates
          type: array
          items:
            $ref: "#/components/schemas/TemplateDto"
        metadata:
          description: Response metadata
          allOf:
            - $ref: "#/components/schemas/Metadata"
      required:
        - templates
        - metadata
    TemplateCreateDto:
      type: object
      properties:
        name:
          type: string
          description: Template name
        subject:
          type: string
          description: Template subject
        body:
          type: string
          description: Template body
        predefinedReplies:
          description: Predefined replies
          type: array
          items:
            type: string
        syncToDevice:
          type: boolean
          description: Sync to device flag
          default: false
      required:
        - name
        - subject
    TemplateUpdateDto:
      type: object
      properties:
        name:
          type: string
          description: Template name
          example: Template name
        subject:
          type: string
          description: Template subject
        body:
          type: string
          description: Template body
        predefinedReplies:
          description: Predefined replies
          type: array
          items:
            type: string
        syncToDevice:
          type: boolean
          description: Sync to device flag
    ContactsStatusTypesDto:
      type: object
      properties:
        loggedIn:
          description: Array of logged in contacts
          type: array
          items:
            type: string
        loggedOff:
          description: Array of logged out in contacts
          type: array
          items:
            type: string
        pagerOff:
          description: Array of contacts with PAGER OFF
          type: array
          items:
            type: string
      required:
        - loggedIn
        - loggedOff
        - pagerOff
    ContactsStatusDto:
      type: object
      properties:
        contactsStatus:
          description: List of contacts by status
          allOf:
            - $ref: "#/components/schemas/ContactsStatusTypesDto"
        metadata:
          description: Response metadata
          allOf:
            - $ref: "#/components/schemas/Metadata"
      required:
        - contactsStatus
        - metadata
    AdministratorGroupDto:
      type: object
      properties:
        id:
          type: number
          description: Administrator group ID
        name:
          type: string
          description: Administrator group name
        administrators:
          description: List of administrator IDs in the group
          type: array
          items:
            type: number
      required:
        - id
        - name
        - administrators
    AdministratorGroupsDto:
      type: object
      properties:
        groups:
          description: Administrator groups
          type: array
          items:
            $ref: "#/components/schemas/AdministratorGroupDto"
        metadata:
          description: Response metadata
          allOf:
            - $ref: "#/components/schemas/Metadata"
      required:
        - groups
        - metadata
    AdministratorGroupCreateDto:
      type: object
      properties:
        name:
          type: string
          description: Administrator group name
        administrators:
          description: List of administrator IDs.
          type: array
          items:
            type: number
      required:
        - name
    AdministratorGroupUpdateDto:
      type: object
      properties:
        name:
          type: string
          description: Administrator group name
        administrators:
          description: List of administrator IDs.
          type: array
          items:
            type: number
      required:
        - name
